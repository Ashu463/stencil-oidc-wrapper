{
  "openapi": "3.0.0",
  "paths": {
    "/health": {
      "get": {
        "operationId": "AppController_getRoutesInfo",
        "summary": "to prove the live status of website",
        "parameters": [],
        "responses": {
          "200": {
            "description": "live status confirmed"
          }
        },
        "tags": [
          "User-OIDC"
        ]
      }
    },
    "/login": {
      "post": {
        "operationId": "AppController_loginRoute",
        "summary": "creates an opaque token for a user logined if no resource parameter is given",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "ashu",
                    "description": "this is name of user"
                  },
                  "password": {
                    "type": "string",
                    "example": "ashu",
                    "description": "this is password of user"
                  },
                  "scopes": {
                    "type": "string",
                    "example": "openid email profile",
                    "description": "this displays scopes"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "jwt token or opaque token generated"
          },
          "400": {
            "description": "Invalid credentials, username and password missing in body"
          },
          "401": {
            "description": "Invalid resource type, send the resource in xyz:abc format"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "User-OIDC"
        ]
      }
    },
    "/opaque-verify": {
      "post": {
        "operationId": "AppController_opaque_verify",
        "summary": "verifies the generated opaque token",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "example": "ybc38pCHaizks0bMFBbKhqy9ZKqawdHH6LV5ZcrshNn",
                    "description": "this is auto generated opaque token"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "opaque token verified"
          },
          "401": {
            "description": "No token is given"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "User-OIDC"
        ]
      }
    },
    "/jwt-verify": {
      "post": {
        "operationId": "AppController_jwt_verify",
        "summary": "verifies the generated jwt token",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJSUzI1NiIsInR5cCI6ImF0K2p3dCIsImtpZCI6IlRMcnZaeEp6U1JzbUc2aXNwYTU0RWFDbzFzZ1hUZmx2cmUwMEtPeUdDZncifQ.eyJqdGkiOiJYSktyZmNMaThyYnJKZWtldWJCMVIiLCJzdWIiOiJhcHAiLCJpYXQiOjE3MTY5MTMxMDYsImV4cCI6MTcxNjkxNjcwNiwic2NvcGUiOiJvcGVuaWQgZW1haWwgcHJvZmlsZSIsImNsaWVudF9pZCI6ImFwcCIsImlzcyI6Imh0dHA6Ly9sb2NhbGhvc3Q6MzAwMCIsImF1ZCI6InN0ZW5jaWw6YXBpIn0.fTjzWUnPKrIjHJabhcey_s5JTHSCMwkxF2kk4uo6VOyWNDr5_vnJN5gBTVzxlwE7YjLWioafWLgmcBiod3fCXdCxLoQokajDc7k4Ib1ueAucMItKV1YbHL1OaQ4Mq66ls5fuD1LSi1XunoRJkLHeSX9i7kJsd-0eBfaWi32XTtDZjyNAlys8sW3bWDW_e4XimsWeqt10Tdf7ARLRkjHhnLfrHUB33t8DASjSWdjpmi8YVnwpmB1au8Wj2MSWI1BrDxladt0blkmVVE3okoX6QXSn_WLiFNC4mY30ExTM1QMow-4pH0FrBMgkjSRgnARGSKVa-RyqIq2ocg2XY1nTbQ",
                    "description": "this is auto generated jwt token"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "jwt token verified"
          },
          "401": {
            "description": "No token is given"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "User-OIDC"
        ]
      }
    },
    "/signup": {
      "post": {
        "operationId": "AppController_signupRoute",
        "summary": "creates new user",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "ashu",
                    "description": "this is name of user"
                  },
                  "password": {
                    "type": "string",
                    "example": "ashu",
                    "description": "this is password of user"
                  },
                  "email": {
                    "type": "integer",
                    "example": "ashu@gmail.com",
                    "description": "this is email id of user"
                  },
                  "birthdate": {
                    "type": "integer",
                    "example": "23-04-2023",
                    "description": "this is birthdate of user"
                  },
                  "gender": {
                    "type": "string",
                    "example": "Male",
                    "description": "this gender of user"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "user created successfully"
          },
          "400": {
            "description": "Invalid fields"
          },
          "401": {
            "description": "Duplicate entry"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "User-OIDC"
        ]
      }
    },
    "/oidc/*": {
      "get": {
        "operationId": "OidcController_mountedOidc_get",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "OidcController_mountedOidc_post",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "OidcController_mountedOidc_put",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "OidcController_mountedOidc_delete",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "OidcController_mountedOidc_patch",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "options": {
        "operationId": "OidcController_mountedOidc_options",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "head": {
        "operationId": "OidcController_mountedOidc_head",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "search": {
        "operationId": "OidcController_mountedOidc_search",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/user/all": {
      "get": {
        "operationId": "UserController_getAllUsers",
        "summary": "verifies the generated jwt token",
        "parameters": [],
        "responses": {
          "200": {
            "description": "jwt token verified"
          },
          "401": {
            "description": "No token is given"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "User"
        ]
      }
    }
  },
  "info": {
    "title": "OIDC Protocol setup",
    "description": "This is the project to implement OIDC protocol in nestjs",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "schemas": {}
  }
}